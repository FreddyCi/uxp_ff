/*!
 * Hybrid Checkbox Component - Official Spectrum CSS + Nuclear Div Approach
 * Combines official Adobe Spectrum tokens with UXP-compatible markup
 */

/* =============================================================================
   NUCLEAR DIV + SPECTRUM CSS RESET OVERRIDE
   ============================================================================= */

/* Ultra-high specificity selector for main checkbox label */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox {
  /* Nuclear reset */
  all: unset !important;
  
  /* Re-establish checkbox foundation */
  box-sizing: border-box !important;
  display: inline-flex !important;
  align-items: flex-start !important;
  position: relative !important;
  cursor: pointer !important;
  user-select: none !important;
  -webkit-user-select: none !important;
  
  /* Official Spectrum Checkbox foundation */
  font-family: var(--spectrum-sans-font-family-stack, 'Adobe Clean', 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif) !important;
  font-size: var(--spectrum-checkbox-font-size, var(--spectrum-font-size-100, 14px)) !important;
  line-height: var(--spectrum-checkbox-line-height, var(--spectrum-line-height-100, 1.3)) !important;
  color: var(--spectrum-checkbox-content-color-default, var(--spectrum-neutral-content-color-default, #1f2937)) !important;
  gap: var(--spectrum-checkbox-text-to-control, var(--spectrum-spacing-75, 6px)) !important;
  
  /* Standard sizing */
  min-height: var(--spectrum-checkbox-height, var(--spectrum-component-height-100, 32px)) !important;
  align-items: center !important;
}

/* Disabled state */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:has(.spectrum-Checkbox-input:disabled) {
  cursor: not-allowed !important;
  opacity: 0.5 !important;
}

/* Hover state */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:hover {
  color: var(--spectrum-checkbox-content-color-hover, var(--spectrum-neutral-content-color-hover, #111827)) !important;
}

/* Active/pressed state */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:active {
  color: var(--spectrum-checkbox-content-color-down, var(--spectrum-neutral-content-color-down, #000000)) !important;
}

/* Focus state */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:focus-within {
  color: var(--spectrum-checkbox-content-color-focus, var(--spectrum-neutral-content-color-focus, #1f2937)) !important;
}

/* =============================================================================
   HIDDEN INPUT ELEMENT
   ============================================================================= */

/* Hide the native input but keep it accessible */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-input {
  position: absolute !important;
  opacity: 0 !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  padding: 0 !important;
  border: 0 !important;
  clip: rect(0, 0, 0, 0) !important;
  overflow: hidden !important;
  white-space: nowrap !important;
}

/* =============================================================================
   CHECKBOX BOX (VISUAL CONTROL)
   ============================================================================= */

/* Main checkbox box */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-box {
  /* Nuclear reset */
  all: unset !important;
  
  /* Re-establish box fundamentals */
  box-sizing: border-box !important;
  display: inline-flex !important;
  align-items: center !important;
  justify-content: center !important;
  position: relative !important;
  flex-shrink: 0 !important;
  
  /* Official Spectrum box styling */
  width: var(--spectrum-checkbox-control-size, 16px) !important;
  height: var(--spectrum-checkbox-control-size, 16px) !important;
  border: var(--spectrum-checkbox-border-width, var(--spectrum-border-width-200, 2px)) solid var(--spectrum-checkbox-control-color-default, #6b7280) !important;
  border-radius: var(--spectrum-checkbox-control-corner-radius, var(--spectrum-corner-radius-75, 3px)) !important;
  background-color: transparent !important;
  transition: all var(--spectrum-checkbox-animation-duration, var(--spectrum-animation-duration-100, 200ms)) ease-out !important;
}

/* Box before pseudo-element for background */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-box:before {
  content: '' !important;
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  border-radius: inherit !important;
  background-color: transparent !important;
  transition: all var(--spectrum-checkbox-animation-duration, var(--spectrum-animation-duration-100, 200ms)) ease-out !important;
}

/* Hover state for box */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:hover .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-control-color-hover, #4b5563) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:hover .spectrum-Checkbox-box:before {
  background-color: var(--spectrum-checkbox-control-color-hover, rgba(107, 114, 128, 0.1)) !important;
}

/* Active state for box */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:active .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-control-color-down, #374151) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:active .spectrum-Checkbox-box:before {
  background-color: var(--spectrum-checkbox-control-color-down, rgba(55, 65, 81, 0.2)) !important;
}

/* Focus indicator */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:focus-within .spectrum-Checkbox-box:after {
  content: '' !important;
  position: absolute !important;
  top: calc(-1 * var(--spectrum-checkbox-focus-indicator-gap, 2px)) !important;
  left: calc(-1 * var(--spectrum-checkbox-focus-indicator-gap, 2px)) !important;
  right: calc(-1 * var(--spectrum-checkbox-focus-indicator-gap, 2px)) !important;
  bottom: calc(-1 * var(--spectrum-checkbox-focus-indicator-gap, 2px)) !important;
  border: var(--spectrum-checkbox-focus-indicator-thickness, var(--spectrum-focus-indicator-thickness, 2px)) solid var(--spectrum-checkbox-focus-indicator-color, var(--spectrum-focus-indicator-color, #2563eb)) !important;
  border-radius: calc(var(--spectrum-checkbox-control-corner-radius, var(--spectrum-corner-radius-75, 3px)) + var(--spectrum-checkbox-focus-indicator-gap, 2px)) !important;
  pointer-events: none !important;
}

/* =============================================================================
   CHECKED STATE
   ============================================================================= */

/* Checked box styling */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-control-selected-color-default, #2563eb) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box:before {
  background-color: var(--spectrum-checkbox-control-selected-color-default, #2563eb) !important;
}

/* Checked + hover */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:hover .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-control-selected-color-hover, #1d4ed8) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:hover .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box:before {
  background-color: var(--spectrum-checkbox-control-selected-color-hover, #1d4ed8) !important;
}

/* Checked + active */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:active .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-control-selected-color-down, #1e40af) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:active .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box:before {
  background-color: var(--spectrum-checkbox-control-selected-color-down, #1e40af) !important;
}

/* Checked + focus */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-input:focus-visible:checked + .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-control-selected-color-focus, #2563eb) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-input:focus-visible:checked + .spectrum-Checkbox-box:before {
  background-color: var(--spectrum-checkbox-control-selected-color-focus, #2563eb) !important;
}

/* =============================================================================
   CHECKMARK ICONS
   ============================================================================= */

/* Hide both icons by default */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-checkmark,
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-partialCheckmark {
  position: absolute !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  pointer-events: none !important;
  opacity: 0 !important;
  transition: opacity var(--spectrum-checkbox-animation-duration, var(--spectrum-animation-duration-100, 200ms)) ease-out !important;
  color: var(--spectrum-checkbox-checkmark-color, #ffffff) !important;
  fill: currentColor !important;
}

/* Show checkmark when checked and not indeterminate */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box .spectrum-Checkbox-checkmark {
  opacity: 1 !important;
}

/* Hide checkmark when indeterminate */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-indeterminate .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box .spectrum-Checkbox-checkmark {
  opacity: 0 !important;
}

/* Show partial checkmark when indeterminate */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-indeterminate .spectrum-Checkbox-box .spectrum-Checkbox-partialCheckmark {
  opacity: 1 !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-indeterminate .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box .spectrum-Checkbox-partialCheckmark {
  opacity: 1 !important;
}

/* =============================================================================
   INDETERMINATE STATE
   ============================================================================= */

/* Indeterminate box styling */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-indeterminate .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-control-selected-color-default, #2563eb) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-indeterminate .spectrum-Checkbox-box:before {
  background-color: var(--spectrum-checkbox-control-selected-color-default, #2563eb) !important;
}

/* Indeterminate + hover */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-indeterminate:hover .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-control-selected-color-hover, #1d4ed8) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-indeterminate:hover .spectrum-Checkbox-box:before {
  background-color: var(--spectrum-checkbox-control-selected-color-hover, #1d4ed8) !important;
}

/* =============================================================================
   CHECKBOX LABEL
   ============================================================================= */

/* Label text styling */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-label {
  /* Nuclear reset */
  all: unset !important;
  
  /* Re-establish label fundamentals */
  box-sizing: border-box !important;
  display: block !important;
  
  /* Spectrum label styling */
  font-family: inherit !important;
  font-size: inherit !important;
  line-height: inherit !important;
  color: inherit !important;
  flex: 1 !important;
  margin-top: var(--spectrum-checkbox-top-to-text, 0) !important;
  word-wrap: break-word !important;
  hyphens: auto !important;
}

/* Label hover state */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:hover .spectrum-Checkbox-label {
  color: inherit !important;
}

/* Label focus state */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-input:focus-visible + * + .spectrum-Checkbox-label {
  color: inherit !important;
}

/* Label active state */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:active .spectrum-Checkbox-label {
  color: inherit !important;
}

/* =============================================================================
   SIZE VARIANTS
   ============================================================================= */

/* Small (S) */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.spectrum-Checkbox--sizeS {
  font-size: var(--spectrum-font-size-75, 12px) !important;
  min-height: var(--spectrum-component-height-75, 24px) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.spectrum-Checkbox--sizeS .spectrum-Checkbox-box {
  width: var(--spectrum-checkbox-control-size-small, 12px) !important;
  height: var(--spectrum-checkbox-control-size-small, 12px) !important;
}

/* Medium (M) - Default */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.spectrum-Checkbox--sizeM {
  font-size: var(--spectrum-font-size-100, 14px) !important;
  min-height: var(--spectrum-component-height-100, 32px) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.spectrum-Checkbox--sizeM .spectrum-Checkbox-box {
  width: var(--spectrum-checkbox-control-size-medium, 16px) !important;
  height: var(--spectrum-checkbox-control-size-medium, 16px) !important;
}

/* Large (L) */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.spectrum-Checkbox--sizeL {
  font-size: var(--spectrum-font-size-200, 16px) !important;
  min-height: var(--spectrum-component-height-200, 40px) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.spectrum-Checkbox--sizeL .spectrum-Checkbox-box {
  width: var(--spectrum-checkbox-control-size-large, 20px) !important;
  height: var(--spectrum-checkbox-control-size-large, 20px) !important;
}

/* Extra Large (XL) */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.spectrum-Checkbox--sizeXL {
  font-size: var(--spectrum-font-size-300, 18px) !important;
  min-height: var(--spectrum-component-height-300, 48px) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.spectrum-Checkbox--sizeXL .spectrum-Checkbox-box {
  width: var(--spectrum-checkbox-control-size-extra-large, 24px) !important;
  height: var(--spectrum-checkbox-control-size-extra-large, 24px) !important;
}

/* =============================================================================
   INVALID STATE
   ============================================================================= */

/* Invalid checkbox styling */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-invalid .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-invalid-color-default, var(--spectrum-negative-color-900, #dc2626)) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-invalid:hover .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-invalid-color-hover, var(--spectrum-negative-color-1000, #b91c1c)) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-invalid .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-invalid-color-default, var(--spectrum-negative-color-900, #dc2626)) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-invalid .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box:before {
  background-color: var(--spectrum-checkbox-invalid-color-default, var(--spectrum-negative-color-900, #dc2626)) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-invalid:hover .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box:before {
  background-color: var(--spectrum-checkbox-invalid-color-hover, var(--spectrum-negative-color-1000, #b91c1c)) !important;
}

/* Invalid + indeterminate */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-invalid.is-indeterminate .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-invalid-color-default, var(--spectrum-negative-color-900, #dc2626)) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-invalid.is-indeterminate .spectrum-Checkbox-box:before {
  background-color: var(--spectrum-checkbox-invalid-color-default, var(--spectrum-negative-color-900, #dc2626)) !important;
}

/* =============================================================================
   EMPHASIZED VARIANT
   ============================================================================= */

/* Emphasized checkbox uses accent colors */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.spectrum-Checkbox--emphasized .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-emphasized-color-default, var(--spectrum-accent-color-900, #2563eb)) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.spectrum-Checkbox--emphasized .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box:before {
  background-color: var(--spectrum-checkbox-emphasized-color-default, var(--spectrum-accent-color-900, #2563eb)) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.spectrum-Checkbox--emphasized:hover .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-emphasized-color-hover, var(--spectrum-accent-color-1000, #1d4ed8)) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.spectrum-Checkbox--emphasized:hover .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box:before {
  background-color: var(--spectrum-checkbox-emphasized-color-hover, var(--spectrum-accent-color-1000, #1d4ed8)) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.spectrum-Checkbox--emphasized:active .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-emphasized-color-down, var(--spectrum-accent-color-1100, #1e40af)) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.spectrum-Checkbox--emphasized:active .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box:before {
  background-color: var(--spectrum-checkbox-emphasized-color-down, var(--spectrum-accent-color-1100, #1e40af)) !important;
}

/* =============================================================================
   DISABLED STATE
   ============================================================================= */

/* Disabled checkbox styling */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-input:disabled + .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-control-color-disabled, var(--spectrum-disabled-content-color, #9ca3af)) !important;
  background-color: transparent !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-input:disabled + .spectrum-Checkbox-box:before {
  background-color: transparent !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-input:disabled + * + .spectrum-Checkbox-label {
  color: var(--spectrum-checkbox-content-color-disabled, var(--spectrum-disabled-content-color, #9ca3af)) !important;
}

/* Disabled + checked */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-input:checked:disabled + .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-control-color-disabled, var(--spectrum-disabled-content-color, #9ca3af)) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-input:checked:disabled + .spectrum-Checkbox-box:before {
  background-color: var(--spectrum-checkbox-control-color-disabled, var(--spectrum-disabled-content-color, #9ca3af)) !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-input:checked:disabled + * + .spectrum-Checkbox-label {
  color: var(--spectrum-checkbox-content-color-disabled, var(--spectrum-disabled-content-color, #9ca3af)) !important;
}

/* =============================================================================
   READONLY STATE
   ============================================================================= */

/* Read-only checkboxes have reduced opacity and no cursor */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-readOnly {
  cursor: default !important;
  opacity: 0.7 !important;
}

label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-readOnly .spectrum-Checkbox-input {
  cursor: default !important;
}

/* =============================================================================
   DARK THEME
   ============================================================================= */

/* Dark theme styles */
.spectrum--darkest label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox,
.spectrum--dark label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox,
[data-color-scheme="dark"] label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox {
  color: var(--spectrum-checkbox-content-color-default, #f9fafb) !important;
}

.spectrum--darkest label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-box,
.spectrum--dark label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-box,
[data-color-scheme="dark"] label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-control-color-default, #9ca3af) !important;
}

.spectrum--darkest label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:hover .spectrum-Checkbox-box,
.spectrum--dark label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:hover .spectrum-Checkbox-box,
[data-color-scheme="dark"] label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox:hover .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-control-color-hover, #d1d5db) !important;
}

/* =============================================================================
   RESPONSIVE DESIGN
   ============================================================================= */

/* Container queries for responsive behavior */
@container (max-width: 300px) {
  label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox {
    font-size: var(--spectrum-font-size-75, 12px) !important;
  }
  
  label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-box {
    width: var(--spectrum-checkbox-control-size-small, 12px) !important;
    height: var(--spectrum-checkbox-control-size-small, 12px) !important;
  }
}

/* CJK language support */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-label:lang(ja),
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-label:lang(ko),
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-label:lang(zh) {
  line-height: var(--spectrum-checkbox-line-height-cjk, var(--spectrum-cjk-line-height-100, 1.5)) !important;
}

/* =============================================================================
   FALLBACK ICONS (for environments without SVG sprite)
   ============================================================================= */

/* Fallback checkmark using CSS */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box::after {
  content: '✓' !important;
  position: absolute !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  color: var(--spectrum-checkbox-checkmark-color, #ffffff) !important;
  font-size: calc(var(--spectrum-checkbox-control-size, 16px) * 0.7) !important;
  font-weight: bold !important;
  line-height: 1 !important;
}

/* Hide CSS fallback when SVG is available */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox .spectrum-Checkbox-checkmark:not(:empty) + * + * + .spectrum-Checkbox-box::after {
  display: none !important;
}

/* Fallback dash for indeterminate using CSS */
label.uxp-reset--complete.spectrum-Checkbox.spectrum-Checkbox.is-indeterminate .spectrum-Checkbox-box::after {
  content: '−' !important;
  position: absolute !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  color: var(--spectrum-checkbox-checkmark-color, #ffffff) !important;
  font-size: calc(var(--spectrum-checkbox-control-size, 16px) * 0.6) !important;
  font-weight: bold !important;
  line-height: 1 !important;
}